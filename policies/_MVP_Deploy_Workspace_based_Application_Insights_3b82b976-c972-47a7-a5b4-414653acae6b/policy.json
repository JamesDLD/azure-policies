{
    "id": "/providers/Microsoft.Management/managementGroups/core/providers/Microsoft.Authorization/policyDefinitions/3b82b976-c972-47a7-a5b4-414653acae6b",
    "type": "Microsoft.Authorization/policyDefinitions",
    "name": "3b82b976-c972-47a7-a5b4-414653acae6b",
    "properties": {
        "displayName": "[MVP] Deploy Workspace-based Application Insights",
        "policyType": "Custom",
        "mode": "Indexed",
        "metadata": {
            "category": "Log Monitor"
        },
        "parameters": {
            "effect": {
                "type": "String",
                "metadata": {
                    "displayName": "Effect",
                    "description": "Enable, disable or audit the execution of the policy"
                },
                "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled",
                    "AuditIfNotExists"
                ],
                "defaultValue": "DeployIfNotExists"
            },
            "tagName": {
                "type": "string",
                "metadata": {
                    "displayName": "Exclusion Tag Name",
                    "description": "Name of the tag to use for excluding vaults from this policy. This should be used along with the Exclusion Tag Value parameter."
                },
                "defaultValue": "_MVP_Deploy_Workspace_based_Application_Insights"
            },
            "tagValue": {
                "type": "string",
                "metadata": {
                    "displayName": "Exclusion Tag Value",
                    "description": "Value of the tag to use for excluding vaults from this policy. This should be used along with the Exclusion Tag Name parameter."
                },
                "defaultValue": "exclude"
            },
            "identityId": {
                "type": "string",
                "metadata": {
                    "description": "Specifies the ID of the user-assigned managed identity used for deployment scripts in ARM templates."
                }
            },
            "logAnalytics": {
                "type": "String",
                "metadata": {
                    "displayName": "Log Analytics workspace",
                    "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
                    "strongType": "omsWorkspace",
                    "assignPermissions": true
                }
            }
        },
        "policyRule": {
            "if": {
                "allOf": [
                    {
                        "field": "type",
                        "equals": "Microsoft.Insights/components"
                    },
                    {
                        "not": {
                            "field": "[concat('tags[',parameters('tagName'), ']')]",
                            "equals": "[parameters('tagValue')]"
                        }
                    }
                ]
            },
            "then": {
                "effect": "[parameters('effect')]",
                "details": {
                    "type": "Microsoft.Insights/components",
                    "name": "[field('name')]",
                    "existenceCondition": {
                        "allOf": [
                            {
                                "field": "Microsoft.Insights/components/IngestionMode",
                                "equals": "LogAnalytics"
                            }
                        ]
                    },
                    "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "/providers/microsoft.authorization/roleDefinitions/ae349356-3a1b-4a5e-921d-050484c6347e",
                        "/providers/microsoft.authorization/roleDefinitions/f1a07417-d97a-45cb-824c-7a7467783830"
                    ],
                    "deployment": {
                        "properties": {
                            "mode": "incremental",
                            "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                    "identityId": {
                                        "type": "string",
                                        "metadata": {
                                            "description": "Specifies the ID of the user-assigned managed identity used for deployment scripts in ARM templates."
                                        }
                                    },
                                    "resourceName": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "object",
                                        "defaultValue": {
                                            "lastTargetResourceName": "[parameters('resourceName')]"
                                        }
                                    },
                                    "logAnalytics": {
                                        "type": "string"
                                    },
                                    "utcValue": {
                                        "type": "string",
                                        "defaultValue": "[utcNow()]"
                                    },
                                    "policyDefinitionReferenceId": {
                                        "type": "string"
                                    }
                                },
                                "variables": {
                                    "additional_tags": {
                                        "lastTargetResourceName": "[parameters('resourceName')]",
                                        "_MVP_Deploy_Diagnostic_Settings_for_Storage_Accounts_to_Log_Analytics_workspace": "exclude",
                                        "_MVP_Latest_TLS_version_should_be_used_in_your_Storage_Accounts": "exclude",
                                        "_MVP_Secure_transfer_to_storage_accounts_should_be_enabled": "exclude",
                                        "_MVP_Storage_account_public_access_should_be_disallowed": "exclude",
                                        "_MVP_Storage_Accounts_Blob_should_have_soft_delete_enabled": "exclude"
                                    }
                                },
                                "resources": [
                                    {
                                        "type": "Microsoft.Resources/deploymentScripts",
                                        "apiVersion": "2020-10-01",
                                        "tags": "[union(variables('additional_tags'),parameters('tags'))]",
                                        "name": "[concat('policy_workspaceBased_',parameters('resourceName'))]",
                                        "location": "[resourceGroup().location]",
                                        "identity": {
                                            "type": "UserAssigned",
                                            "userAssignedIdentities": {
                                                "[parameters('identityId')]": {}
                                            }
                                        },
                                        "kind": "AzureCLI",
                                        "properties": {
                                            "forceUpdateTag": "[parameters('utcValue')]",
                                            "AzCliVersion": "2.15.0",
                                            "timeout": "PT30M",
                                            "arguments": "[format('{0} {1} {2}', parameters('resourceName'), resourceGroup().name, parameters('logAnalytics'))]",
                                            "scriptContent": "
                            #Variable
                            extensionNames=$(az extension list | jq -r '.[].name')  
                            extensionName='application-insights'
                            
                            #Pre-requisites
                            if (echo $extensionNames  | fgrep -q $extensionName); then
                                echo \"Extension $extensionName is available\";
                            else
                                echo \"Installing extension $extensionName\";
                                az extension add -n $extensionName --yes;
                            fi
                            
                            #Action
                            before=$(az monitor app-insights component show --app $1 -g $2 -o json);
                            
                            echo \"Setting the app-insights component as workspaced-based for resource : $1 located in the resource group : $2 to the log analytics workspace id : $3\"; 
                            result=$(az monitor app-insights component update --app $1 -g $2 --workspace $3); 
                            
                            after=$(az monitor app-insights component show --app $1 -g $2 -o json);
                            echo \"{ \"before_after\": [ ${before},${after} ] }\" > $AZ_SCRIPTS_OUTPUT_PATH;
                                            ",
                                            "cleanupPreference": "Always",
                                            "retentionInterval": "PT1H"
                                        }
                                    }
                                ],
                                "outputs": {
                                    "policyDefinitionReferenceId": {
                                        "type": "string",
                                        "value": "[parameters('policyDefinitionReferenceId')]"
                                    }
                                }
                            },
                            "parameters": {
                                "identityId": {
                                    "value": "[parameters('identityId')]"
                                },
                                "resourceName": {
                                    "value": "[field('Name')]"
                                },
                                "tags": {
                                    "value": "[if(empty(field('tags')),createObject('lastTargetResourceName', field('Name')),field('tags'))]"
                                },
                                "logAnalytics": {
                                    "value": "[parameters('logAnalytics')]"
                                },
                                "policyDefinitionReferenceId": {
                                    "value": "[parameters('tagName')]"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}