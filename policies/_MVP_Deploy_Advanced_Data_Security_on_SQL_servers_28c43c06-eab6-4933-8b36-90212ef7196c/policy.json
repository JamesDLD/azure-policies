{
    "id": "/providers/Microsoft.Management/managementGroups/core/providers/Microsoft.Authorization/policyDefinitions/28c43c06-eab6-4933-8b36-90212ef7196c",
    "type": "Microsoft.Authorization/policyDefinitions",
    "name": "28c43c06-eab6-4933-8b36-90212ef7196c",
    "properties": {
        "displayName": "[MVP] Deploy Advanced Data Security on SQL servers",
        "policyType": "Custom",
        "mode": "Indexed",
        "metadata": {
            "category": "SQL"
        },
        "parameters": {
            "effect": {
                "type": "String",
                "metadata": {
                    "displayName": "Effect",
                    "description": "Enable, disable or audit the execution of the policy"
                },
                "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled",
                    "AuditIfNotExists"
                ],
                "defaultValue": "DeployIfNotExists"
            },
            "tagName": {
                "type": "string",
                "metadata": {
                    "displayName": "Exclusion Tag Name",
                    "description": "Name of the tag to use for excluding vaults from this policy. This should be used along with the Exclusion Tag Value parameter."
                },
                "defaultValue": "_MVP_Deploy_Advanced_Data_Security_on_SQL_servers"
            },
            "tagValue": {
                "type": "string",
                "metadata": {
                    "displayName": "Exclusion Tag Value",
                    "description": "Value of the tag to use for excluding vaults from this policy. This should be used along with the Exclusion Tag Name parameter."
                },
                "defaultValue": "exclude"
            },
            "storageId": {
                "type": "String",
                "metadata": {
                    "displayName": "Storage id",
                    "description": "A string with the storage id for the SQL Threat Detection and Vulnerability Assessment to be sent to. It will be used for deployment purposes only. The format must be: '/subscriptions/{subscription id}/resourceGroups/{resourceGroup name}/providers/Microsoft.Storage/storageAccounts/{storage account name}",
                    "assignPermissions": "true"
                }
            }
        },
        "policyRule": {
            "if": {
                "allOf": [
                    {
                        "field": "type",
                        "equals": "Microsoft.Sql/servers"
                    },
                    {
                        "not": {
                            "field": "[concat('tags[',parameters('tagName'), ']')]",
                            "equals": "[parameters('tagValue')]"
                        }
                    }
                ]
            },
            "then": {
                "effect": "[parameters('effect')]",
                "details": {
                    "type": "Microsoft.Sql/servers/securityAlertPolicies",
                    "name": "Default",
                    "existenceCondition": {
                        "field": "Microsoft.Sql/securityAlertPolicies.state",
                        "equals": "Enabled"
                    },
                    "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
                        "/providers/microsoft.authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab"
                    ],
                    "deployment": {
                        "properties": {
                            "mode": "incremental",
                            "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                    "storageId": {
                                        "type": "String"
                                    },
                                    "serverName": {
                                        "type": "string"
                                    },
                                    "location": {
                                        "type": "string"
                                    }
                                },
                                "variables": {
                                    "serverResourceGroupName": "[resourceGroup().name]",
                                    "subscriptionId": "[subscription().subscriptionId]"
                                },
                                "resources": [
                                    {
                                        "name": "[concat(parameters('serverName'), '/Default')]",
                                        "type": "Microsoft.Sql/servers/securityAlertPolicies",
                                        "apiVersion": "2017-03-01-preview",
                                        "properties": {
                                            "state": "Enabled",
                                            "emailAccountAdmins": true
                                        }
                                    },
                                    {
                                        "name": "[concat(parameters('serverName'), '/Default')]",
                                        "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
                                        "apiVersion": "2018-06-01-preview",
                                        "properties": {
                                            "storageContainerPath": "[concat(reference(parameters('storageId'), '2019-04-01').primaryEndpoints.blob, 'vulnerability-assessment')]",
                                            "storageAccountAccessKey": "[listKeys(parameters('storageId'), '2018-02-01').keys[0].value]",
                                            "recurringScans": {
                                                "isEnabled": true,
                                                "emailSubscriptionAdmins": true,
                                                "emails": []
                                            }
                                        },
                                        "dependsOn": [
                                            "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
                                        ]
                                    }
                                ]
                            },
                            "parameters": {
                                "storageId": {
                                    "value": "[parameters('storageId')]"
                                },
                                "serverName": {
                                    "value": "[field('name')]"
                                },
                                "location": {
                                    "value": "[field('location')]"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}