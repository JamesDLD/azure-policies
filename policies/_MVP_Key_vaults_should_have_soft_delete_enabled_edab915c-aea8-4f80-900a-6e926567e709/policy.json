{
    "id": "/providers/Microsoft.Management/managementGroups/core/providers/Microsoft.Authorization/policyDefinitions/edab915c-aea8-4f80-900a-6e926567e709",
    "type": "Microsoft.Authorization/policyDefinitions",
    "name": "edab915c-aea8-4f80-900a-6e926567e709",
    "properties": {
        "displayName": "[MVP] Key vaults should have soft delete enabled",
        "policyType": "Custom",
        "mode": "Indexed",
        "metadata": {
            "category": "Backup"
        },
        "parameters": {
            "effect": {
                "type": "String",
                "metadata": {
                    "displayName": "Effect",
                    "description": "Enable, disable or audit the execution of the policy"
                },
                "allowedValues": [
                    "DeployIfNotExists",
                    "Disabled",
                    "AuditIfNotExists"
                ],
                "defaultValue": "DeployIfNotExists"
            },
            "tagName": {
                "type": "string",
                "metadata": {
                    "displayName": "Exclusion Tag Name",
                    "description": "Name of the tag to use for excluding vaults from this policy. This should be used along with the Exclusion Tag Value parameter."
                },
                "defaultValue": "_MVP_Key_vaults_should_have_soft_delete_enabled"
            },
            "tagValue": {
                "type": "string",
                "metadata": {
                    "displayName": "Exclusion Tag Value",
                    "description": "Value of the tag to use for excluding vaults from this policy. This should be used along with the Exclusion Tag Name parameter."
                },
                "defaultValue": "exclude"
            },
            "identityId": {
                "type": "string",
                "metadata": {
                    "description": "Specifies the ID of the user-assigned managed identity used for deployment scripts in ARM templates."
                }
            }
        },
        "policyRule": {
            "if": {
                "allOf": [
                    {
                        "field": "type",
                        "equals": "Microsoft.KeyVault/vaults"
                    },
                    {
                        "not": {
                            "field": "[concat('tags[',parameters('tagName'), ']')]",
                            "equals": "[parameters('tagValue')]"
                        }
                    }
                ]
            },
            "then": {
                "effect": "[parameters('effect')]",
                "details": {
                    "type": "Microsoft.KeyVault/vaults",
                    "name": "[field('name')]",
                    "existenceCondition": {
                        "anyOf": [
                            {
                                "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                                "exists": "true"
                            },
                            {
                                "field": "Microsoft.KeyVault/vaults/enableSoftDelete",
                                "equals": "true"
                            }
                        ]
                    },
                    "roleDefinitionIds": [
                        "/providers/microsoft.authorization/roleDefinitions/f25e0fa2-a7c8-4377-a976-54943a77a395",
                        "/providers/microsoft.authorization/roleDefinitions/f1a07417-d97a-45cb-824c-7a7467783830"
                    ],
                    "deployment": {
                        "properties": {
                            "mode": "incremental",
                            "template": {
                                "$schema": "http://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                "contentVersion": "1.0.0.0",
                                "parameters": {
                                    "identityId": {
                                        "type": "string",
                                        "metadata": {
                                            "description": "Specifies the ID of the user-assigned managed identity used for deployment scripts in ARM templates."
                                        }
                                    },
                                    "resourceName": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "object",
                                        "defaultValue": {
                                            "lastTargetResourceName": "[parameters('resourceName')]"
                                        }
                                    },
                                    "utcValue": {
                                        "type": "string",
                                        "defaultValue": "[utcNow()]"
                                    },
                                    "policyDefinitionReferenceId": {
                                        "type": "string"
                                    }
                                },
                                "variables": {
                                    "additional_tags": {
                                        "lastTargetResourceName": "[parameters('resourceName')]",
                                        "_MVP_Deploy_Diagnostic_Settings_for_Storage_Accounts_to_Log_Analytics_workspace": "exclude",
                                        "_MVP_Latest_TLS_version_should_be_used_in_your_Storage_Accounts": "exclude",
                                        "_MVP_Secure_transfer_to_storage_accounts_should_be_enabled": "exclude",
                                        "_MVP_Storage_account_public_access_should_be_disallowed": "exclude"
                                    }
                                },
                                "resources": [
                                    {
                                        "type": "Microsoft.Resources/deploymentScripts",
                                        "apiVersion": "2020-10-01",
                                        "tags": "[union(variables('additional_tags'),parameters('tags'))]",
                                        "name": "[concat('policy_softDelele_',parameters('resourceName'))]",
                                        "location": "[resourceGroup().location]",
                                        "identity": {
                                            "type": "UserAssigned",
                                            "userAssignedIdentities": {
                                                "[parameters('identityId')]": {}
                                            }
                                        },
                                        "kind": "AzureCLI",
                                        "properties": {
                                            "forceUpdateTag": "[parameters('utcValue')]",
                                            "AzCliVersion": "2.15.0",
                                            "timeout": "PT30M",
                                            "arguments": "[format('{0} {1} {2}', parameters('resourceName'), resourceGroup().name, subscription().subscriptionId)]",
                                            "scriptContent": "                            
                            #Action
                            before=$(az keyvault show --subscription $3 -g $2 -n $1 -o json);
                            
                            echo \"Enabling soft-delete for Key Vault on the resource : $1 located in the resource group : $2 and subscription : $3\"; 
                            result=$(az keyvault update --subscription $3 -g $2 -n $1 --enable-soft-delete true); 
                            
                            after=$(az keyvault show --subscription $3 -g $2 -n $1 -o json);
                            echo \"{ \"before_after\": [ ${before},${after} ] }\" > $AZ_SCRIPTS_OUTPUT_PATH;
                                            ",
                                            "cleanupPreference": "Always",
                                            "retentionInterval": "PT1H"
                                        }
                                    }
                                ],
                                "outputs": {
                                    "policyDefinitionReferenceId": {
                                        "type": "string",
                                        "value": "[parameters('policyDefinitionReferenceId')]"
                                    }
                                }
                            },
                            "parameters": {
                                "identityId": {
                                    "value": "[parameters('identityId')]"
                                },
                                "resourceName": {
                                    "value": "[field('Name')]"
                                },
                                "tags": {
                                    "value": "[field('tags')]"
                                },
                                "policyDefinitionReferenceId": {
                                    "value": "[parameters('tagName')]"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}